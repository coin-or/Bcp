# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (C) 2006 International Business Machines and others.
# All Rights Reserved.
# This file is distributed under the Common Public License.


srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@

# Include MPI header directory if MPI is used
@COIN_HAS_MPI_TRUE@am__append_1 = -I`$(CYGPATH_W) $(MPIINCDIR)`
subdir = src
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/inc/config_bcp.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libBcp_la_LIBADD =
am_libBcp_la_OBJECTS = BCP_cg_user.lo BCP_cg_param.lo BCP_cg.lo \
	BCP_cg_main.lo BCP_lp_fathom.lo BCP_lp_branch.lo \
	BCP_lp_branching.lo BCP_lp_misc.lo BCP_lp_main_loop.lo \
	BCP_lp_msgproc.lo BCP_lp_user.lo BCP_lp_generate_vars.lo \
	BCP_lp_msg_node_rec.lo BCP_lp_node.lo BCP_lp_create_lp.lo \
	BCP_lp_msg_node_send.lo BCP_lp_convert_OsiWarmStart.lo \
	BCP_lp_result.lo BCP_lp_generate_cuts.lo BCP_lp_colrow.lo \
	BCP_lp.lo BCP_lp_main.lo BCP_lp_pool.lo BCP_lp_param.lo \
	BCP_tm_trimming.lo BCP_tm_msg_node_send.lo \
	BCP_tm_msg_node_rec.lo BCP_tm_param.lo BCP_tm_user.lo \
	BCP_tm_commandline.lo BCP_tm_node.lo BCP_tm_msgproc.lo \
	BCP_tm_functions.lo BCP_tm_main.lo BCP_tm_statistics.lo \
	BCP_tm.lo BCP_vg_param.lo BCP_vg_user.lo BCP_vg_main.lo \
	BCP_vg.lo BCP_solution.lo BCP_node_change.lo \
	BCP_indexed_pricing.lo BCP_USER.lo BCP_warmstart_basis.lo \
	BCP_branch.lo BCP_vector_sanity.lo BCP_cut.lo \
	BCP_obj_change.lo BCP_warmstart_dual.lo BCP_matrix.lo \
	BCP_problem_core.lo BCP_warmstart_pack.lo BCP_matrix_pack.lo \
	BCP_var.lo BCP_vector_bool.lo BCP_vector_char.lo \
	BCP_vector_double.lo BCP_vector_int.lo BCP_vector_short.lo \
	BCP_message_single.lo BCP_message_mpi.lo BCP_message_pvm.lo
libBcp_la_OBJECTS = $(am_libBcp_la_OBJECTS)
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libBcp_la_SOURCES)
DIST_SOURCES = $(libBcp_la_SOURCES)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ADDLIBS = @ADDLIBS@
ADD_CFLAGS = @ADD_CFLAGS@
ADD_CXXFLAGS = @ADD_CXXFLAGS@
ALWAYS_FALSE_FALSE = @ALWAYS_FALSE_FALSE@
ALWAYS_FALSE_TRUE = @ALWAYS_FALSE_TRUE@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUX_DIR = @AUX_DIR@
AWK = @AWK@
BCPOBJDIR = @BCPOBJDIR@
BCPSRCDIR = @BCPSRCDIR@
BUILDTOOLSDIR = @BUILDTOOLSDIR@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CDEFS = @CDEFS@
CFLAGS = @CFLAGS@
CGLOBJDIR = @CGLOBJDIR@
CGLSRCDIR = @CGLSRCDIR@
CLPOBJDIR = @CLPOBJDIR@
CLPSRCDIR = @CLPSRCDIR@
COINUTILSOBJDIR = @COINUTILSOBJDIR@
COINUTILSSRCDIR = @COINUTILSSRCDIR@
COIN_HAS_BCP_FALSE = @COIN_HAS_BCP_FALSE@
COIN_HAS_BCP_TRUE = @COIN_HAS_BCP_TRUE@
COIN_HAS_CGL_FALSE = @COIN_HAS_CGL_FALSE@
COIN_HAS_CGL_TRUE = @COIN_HAS_CGL_TRUE@
COIN_HAS_CLP_FALSE = @COIN_HAS_CLP_FALSE@
COIN_HAS_CLP_TRUE = @COIN_HAS_CLP_TRUE@
COIN_HAS_COINUTILS_FALSE = @COIN_HAS_COINUTILS_FALSE@
COIN_HAS_COINUTILS_TRUE = @COIN_HAS_COINUTILS_TRUE@
COIN_HAS_MPI_FALSE = @COIN_HAS_MPI_FALSE@
COIN_HAS_MPI_TRUE = @COIN_HAS_MPI_TRUE@
COIN_HAS_OSI_FALSE = @COIN_HAS_OSI_FALSE@
COIN_HAS_OSI_TRUE = @COIN_HAS_OSI_TRUE@
COIN_HAS_VOL_FALSE = @COIN_HAS_VOL_FALSE@
COIN_HAS_VOL_TRUE = @COIN_HAS_VOL_TRUE@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEFS = @CXXDEFS@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DBG_CFLAGS = @DBG_CFLAGS@
DBG_CXXFLAGS = @DBG_CXXFLAGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FADDLIBS = @FADDLIBS@
FFLAGS = @FFLAGS@
HAVE_EXTERNALS_FALSE = @HAVE_EXTERNALS_FALSE@
HAVE_EXTERNALS_TRUE = @HAVE_EXTERNALS_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBEXT = @LIBEXT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOLM4 = @LIBTOOLM4@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_LDFLAGS = @LT_LDFLAGS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MPICC = @MPICC@
MPICXX = @MPICXX@
MPIINCDIR = @MPIINCDIR@
MPILIB = @MPILIB@
OBJEXT = @OBJEXT@
OPT_CFLAGS = @OPT_CFLAGS@
OPT_CXXFLAGS = @OPT_CXXFLAGS@
OSIOBJDIR = @OSIOBJDIR@
OSISRCDIR = @OSISRCDIR@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
RPATH_FLAGS = @RPATH_FLAGS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
VOLOBJDIR = @VOLOBJDIR@
VOLSRCDIR = @VOLSRCDIR@
VPATH_DISTCLEANFILES = @VPATH_DISTCLEANFILES@
abs_bin_dir = @abs_bin_dir@
abs_include_dir = @abs_include_dir@
abs_lib_dir = @abs_lib_dir@
abs_source_dir = @abs_source_dir@
ac_c_preproc_warn_flag = @ac_c_preproc_warn_flag@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
ac_cxx_preproc_warn_flag = @ac_cxx_preproc_warn_flag@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
have_autoconf = @have_autoconf@
have_automake = @have_automake@
have_svn = @have_svn@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
AUTOMAKE_OPTIONS = foreign

########################################################################
#                               libBcp                                 #
########################################################################

# Name of the library compiled in this directory.  We want it to be installed
# in the 'lib' directory
lib_LTLIBRARIES = libBcp.la

# List all source files for this library, including headers
libBcp_la_SOURCES = \
	CG/BCP_cg_user.cpp \
	CG/BCP_cg_param.cpp \
	CG/BCP_cg.cpp \
	CG/BCP_cg_main.cpp \
	LP/BCP_lp_fathom.cpp \
	LP/BCP_lp_branch.cpp \
	LP/BCP_lp_branching.cpp \
	LP/BCP_lp_misc.cpp \
	LP/BCP_lp_main_loop.cpp \
	LP/BCP_lp_msgproc.cpp \
	LP/BCP_lp_user.cpp \
	LP/BCP_lp_generate_vars.cpp \
	LP/BCP_lp_msg_node_rec.cpp \
	LP/BCP_lp_node.cpp \
	LP/BCP_lp_create_lp.cpp \
	LP/BCP_lp_msg_node_send.cpp \
	LP/BCP_lp_convert_OsiWarmStart.cpp \
	LP/BCP_lp_result.cpp \
	LP/BCP_lp_generate_cuts.cpp \
	LP/BCP_lp_colrow.cpp \
	LP/BCP_lp.cpp \
	LP/BCP_lp_main.cpp \
	LP/BCP_lp_pool.cpp \
	LP/BCP_lp_param.cpp \
	TM/BCP_tm_trimming.cpp \
	TM/BCP_tm_msg_node_send.cpp \
	TM/BCP_tm_msg_node_rec.cpp \
	TM/BCP_tm_param.cpp \
	TM/BCP_tm_user.cpp \
	TM/BCP_tm_commandline.cpp \
	TM/BCP_tm_node.cpp \
	TM/BCP_tm_msgproc.cpp \
	TM/BCP_tm_functions.cpp \
	TM/BCP_tm_main.cpp \
	TM/BCP_tm_statistics.cpp \
	TM/BCP_tm.cpp \
	VG/BCP_vg_param.cpp \
	VG/BCP_vg_user.cpp \
	VG/BCP_vg_main.cpp \
	VG/BCP_vg.cpp \
	Member/BCP_solution.cpp \
	Member/BCP_node_change.cpp \
	Member/BCP_indexed_pricing.cpp \
	Member/BCP_USER.cpp \
	Member/BCP_warmstart_basis.cpp \
	Member/BCP_branch.cpp \
	Member/BCP_vector_sanity.cpp \
	Member/BCP_cut.cpp \
	Member/BCP_obj_change.cpp \
	Member/BCP_warmstart_dual.cpp \
	Member/BCP_matrix.cpp \
	Member/BCP_problem_core.cpp \
	Member/BCP_warmstart_pack.cpp \
	Member/BCP_matrix_pack.cpp \
	Member/BCP_var.cpp \
	Member/BCP_vector_bool.cpp \
	Member/BCP_vector_char.cpp \
	Member/BCP_vector_double.cpp \
	Member/BCP_vector_int.cpp \
	Member/BCP_vector_short.cpp \
	include/BCP_math.hpp \
	include/BCP_msvc.hpp \
	include/BCP_vg_param.hpp \
	include/BCP_message.hpp \
	include/BCP_solution.hpp \
	include/BCP_vector_change.hpp \
	include/BCP_lp_branch.hpp \
	include/BCP_process.hpp \
	include/BCP_node_change.hpp \
	include/BCP_indexed_pricing.hpp \
	include/BCP_vector.hpp \
	include/BCP_vector_char.hpp \
	include/BCP_tm_param.hpp \
	include/BCP_USER.hpp \
	include/BCP_vg_user.hpp \
	include/BCP_lp_main_loop.hpp \
	include/BCP_warmstart_basis.hpp \
	include/BCP_tm_user.hpp \
	include/BCP_lp_user.hpp \
	include/BCP_branch.hpp \
	include/BCP_warmstart.hpp \
	include/BCP_vector_sanity.hpp \
	include/BCP_cut.hpp \
	include/BCP_message_tag.hpp \
	include/BCP_tm_node.hpp \
	include/BCP_cg_user.hpp \
	include/BCP_set_intersects.hpp \
	include/BCP_cg_param.hpp \
	include/BCP_obj_change.hpp \
	include/BCP_warmstart_dual.hpp \
	include/BCP_vector_int.hpp \
	include/BCP_lp_node.hpp \
	include/BCP_string.hpp \
	include/BCP_matrix.hpp \
	include/BCP_parameters.hpp \
	include/BCP_enum.hpp \
	include/BCP_enum_branch.hpp \
	include/BCP_vector_general.hpp \
	include/BCP_lp_functions.hpp \
	include/BCP_functions.hpp \
	include/BCP_vector_short.hpp \
	include/BCP_cygwin.hpp \
	include/BCP_problem_core.hpp \
	include/BCP_vector_double.hpp \
	include/BCP_lp_result.hpp \
	include/BCP_main_fun.hpp \
	include/BCP_tm_functions.hpp \
	include/BCP_error.hpp \
	include/BCP_linux.hpp \
	include/BCP_enum_tm.hpp \
	include/BCP_MACH.hpp \
	include/BCP_enum_process_t.hpp \
	include/BCP_cg.hpp \
	include/BCP_vector_bool.hpp \
	include/BCP_lp.hpp \
	include/BCP_mempool.hpp \
	include/BCP_bluegene_xlc.hpp \
	include/BCP_var.hpp \
	include/BCP_lp_pool.hpp \
	include/BCP_os.hpp \
	include/BCP_buffer.hpp \
	include/BCP_lp_param.hpp \
	include/BCP_sunos.hpp \
	include/BCP_aix43.hpp \
	include/BCP_freebsd.hpp \
	include/BCP_tm.hpp \
	include/BCP_vg.hpp \
	include/BCP_vector_bool.hpp \
	include/BCP_vector_char.hpp \
	include/BCP_vector_double.hpp \
	include/BCP_vector_int.hpp \
	include/BCP_vector_short.hpp \
	Member/BCP_message_single.cpp \
	include/BCP_message_single.hpp \
	Member/BCP_message_mpi.cpp \
	include/BCP_message_mpi.hpp \
	Member/BCP_message_pvm.cpp \
	include/BCP_message_pvm.hpp \
	include/BcpConfig.h


# This is for libtool (on Windows)
libBcp_la_LDFLAGS = $(LT_LDFLAGS)

########################################################################
#                            Additional flags                          #
########################################################################

# Here list all include flags, relative to this "srcdir" directory.  This
# "cygpath" stuff is necessary to compile with native compilers on Windows.
AM_CPPFLAGS = -I`$(CYGPATH_W) $(COINUTILSSRCDIR)/src` -I`$(CYGPATH_W) \
	$(COINUTILSOBJDIR)/inc` -I`$(CYGPATH_W) $(OSISRCDIR)/src` \
	$(am__append_1)

# Include PVM header directory if PVM is used
#if COIN_HAS_PVM
#AM_CPPFLAGS +=  -I`$(CYGPATH_W) $(PVMINCDIR)`
#endif

# This line is necessary to allow VPATH compilation with MS compilers
# on Cygwin
DEFAULT_INCLUDES = -I. -I`$(CYGPATH_W) $(srcdir)/include` -I$(top_builddir)/inc

########################################################################
#                Headers that need to be installed                     #
########################################################################

# Here list all the header files that are required by a user of the library,
# and that therefore should be installed in 'install'
include_HEADERS = \
	../inc/config_bcp.h \
	include/BCP_math.hpp \
	include/BCP_vg_param.hpp \
	include/BCP_message.hpp \
	include/BCP_solution.hpp \
	include/BCP_vector_change.hpp \
	include/BCP_lp_branch.hpp \
	include/BCP_message_pvm.hpp \
	include/BCP_process.hpp \
	include/BCP_node_change.hpp \
	include/BCP_indexed_pricing.hpp \
	include/BCP_vector.hpp \
	include/BCP_vector_char.hpp \
	include/BCP_tm_param.hpp \
	include/BCP_USER.hpp \
	include/BCP_vg_user.hpp \
	include/BCP_lp_main_loop.hpp \
	include/BCP_warmstart_basis.hpp \
	include/BCP_tm_user.hpp \
	include/BCP_lp_user.hpp \
	include/BCP_branch.hpp \
	include/BCP_warmstart.hpp \
	include/BCP_vector_sanity.hpp \
	include/BCP_cut.hpp \
	include/BCP_message_tag.hpp \
	include/BCP_tm_node.hpp \
	include/BCP_cg_user.hpp \
	include/BCP_set_intersects.hpp \
	include/BCP_cg_param.hpp \
	include/BCP_obj_change.hpp \
	include/BCP_warmstart_dual.hpp \
	include/BCP_vector_int.hpp \
	include/BCP_lp_node.hpp \
	include/BCP_string.hpp \
	include/BCP_matrix.hpp \
	include/BCP_parameters.hpp \
	include/BCP_enum.hpp \
	include/BCP_enum_branch.hpp \
	include/BCP_vector_general.hpp \
	include/BCP_lp_functions.hpp \
	include/BCP_functions.hpp \
	include/BCP_vector_short.hpp \
	include/BCP_message_mpi.hpp \
	include/BCP_problem_core.hpp \
	include/BCP_message_single.hpp \
	include/BCP_vector_double.hpp \
	include/BCP_lp_result.hpp \
	include/BCP_main_fun.hpp \
	include/BCP_tm_functions.hpp \
	include/BCP_error.hpp \
	include/BCP_enum_tm.hpp \
	include/BCP_enum_process_t.hpp \
	include/BCP_cg.hpp \
	include/BCP_vector_bool.hpp \
	include/BCP_lp.hpp \
	include/BCP_mempool.hpp \
	include/BCP_var.hpp \
	include/BCP_lp_pool.hpp \
	include/BCP_os.hpp \
	include/BCP_buffer.hpp \
	include/BCP_lp_param.hpp \
	include/BCP_tm.hpp \
	include/BCP_vg.hpp \
	include/BcpConfig.h


#############################################################################
# Create the Config.h file that always defines HAVE_CONFIG_H and install it #
#############################################################################

# You only need to adapt the following line
ConfigHeader = BcpConfig.h
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libBcp.la: $(libBcp_la_OBJECTS) $(libBcp_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libBcp_la_LDFLAGS) $(libBcp_la_OBJECTS) $(libBcp_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_USER.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_branch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_cg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_cg_main.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_cg_param.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_cg_user.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_cut.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_indexed_pricing.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_branch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_branching.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_colrow.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_convert_OsiWarmStart.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_create_lp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_fathom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_generate_cuts.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_generate_vars.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_main.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_main_loop.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_misc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_msg_node_rec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_msg_node_send.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_msgproc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_node.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_param.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_pool.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_result.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_lp_user.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_matrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_matrix_pack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_message_mpi.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_message_pvm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_message_single.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_node_change.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_obj_change.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_problem_core.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_solution.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_tm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_tm_commandline.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_tm_functions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_tm_main.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_tm_msg_node_rec.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_tm_msg_node_send.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_tm_msgproc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_tm_node.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_tm_param.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_tm_statistics.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_tm_trimming.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_tm_user.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_var.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_vector_bool.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_vector_char.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_vector_double.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_vector_int.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_vector_sanity.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_vector_short.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_vg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_vg_main.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_vg_param.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_vg_user.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_warmstart_basis.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_warmstart_dual.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BCP_warmstart_pack.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

BCP_cg_user.lo: CG/BCP_cg_user.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_cg_user.lo -MD -MP -MF "$(DEPDIR)/BCP_cg_user.Tpo" -c -o BCP_cg_user.lo `test -f 'CG/BCP_cg_user.cpp' || echo '$(srcdir)/'`CG/BCP_cg_user.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_cg_user.Tpo" "$(DEPDIR)/BCP_cg_user.Plo"; else rm -f "$(DEPDIR)/BCP_cg_user.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CG/BCP_cg_user.cpp' object='BCP_cg_user.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_cg_user.lo `test -f 'CG/BCP_cg_user.cpp' || echo '$(srcdir)/'`CG/BCP_cg_user.cpp

BCP_cg_param.lo: CG/BCP_cg_param.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_cg_param.lo -MD -MP -MF "$(DEPDIR)/BCP_cg_param.Tpo" -c -o BCP_cg_param.lo `test -f 'CG/BCP_cg_param.cpp' || echo '$(srcdir)/'`CG/BCP_cg_param.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_cg_param.Tpo" "$(DEPDIR)/BCP_cg_param.Plo"; else rm -f "$(DEPDIR)/BCP_cg_param.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CG/BCP_cg_param.cpp' object='BCP_cg_param.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_cg_param.lo `test -f 'CG/BCP_cg_param.cpp' || echo '$(srcdir)/'`CG/BCP_cg_param.cpp

BCP_cg.lo: CG/BCP_cg.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_cg.lo -MD -MP -MF "$(DEPDIR)/BCP_cg.Tpo" -c -o BCP_cg.lo `test -f 'CG/BCP_cg.cpp' || echo '$(srcdir)/'`CG/BCP_cg.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_cg.Tpo" "$(DEPDIR)/BCP_cg.Plo"; else rm -f "$(DEPDIR)/BCP_cg.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CG/BCP_cg.cpp' object='BCP_cg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_cg.lo `test -f 'CG/BCP_cg.cpp' || echo '$(srcdir)/'`CG/BCP_cg.cpp

BCP_cg_main.lo: CG/BCP_cg_main.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_cg_main.lo -MD -MP -MF "$(DEPDIR)/BCP_cg_main.Tpo" -c -o BCP_cg_main.lo `test -f 'CG/BCP_cg_main.cpp' || echo '$(srcdir)/'`CG/BCP_cg_main.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_cg_main.Tpo" "$(DEPDIR)/BCP_cg_main.Plo"; else rm -f "$(DEPDIR)/BCP_cg_main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CG/BCP_cg_main.cpp' object='BCP_cg_main.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_cg_main.lo `test -f 'CG/BCP_cg_main.cpp' || echo '$(srcdir)/'`CG/BCP_cg_main.cpp

BCP_lp_fathom.lo: LP/BCP_lp_fathom.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_fathom.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_fathom.Tpo" -c -o BCP_lp_fathom.lo `test -f 'LP/BCP_lp_fathom.cpp' || echo '$(srcdir)/'`LP/BCP_lp_fathom.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_fathom.Tpo" "$(DEPDIR)/BCP_lp_fathom.Plo"; else rm -f "$(DEPDIR)/BCP_lp_fathom.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_fathom.cpp' object='BCP_lp_fathom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_fathom.lo `test -f 'LP/BCP_lp_fathom.cpp' || echo '$(srcdir)/'`LP/BCP_lp_fathom.cpp

BCP_lp_branch.lo: LP/BCP_lp_branch.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_branch.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_branch.Tpo" -c -o BCP_lp_branch.lo `test -f 'LP/BCP_lp_branch.cpp' || echo '$(srcdir)/'`LP/BCP_lp_branch.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_branch.Tpo" "$(DEPDIR)/BCP_lp_branch.Plo"; else rm -f "$(DEPDIR)/BCP_lp_branch.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_branch.cpp' object='BCP_lp_branch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_branch.lo `test -f 'LP/BCP_lp_branch.cpp' || echo '$(srcdir)/'`LP/BCP_lp_branch.cpp

BCP_lp_branching.lo: LP/BCP_lp_branching.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_branching.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_branching.Tpo" -c -o BCP_lp_branching.lo `test -f 'LP/BCP_lp_branching.cpp' || echo '$(srcdir)/'`LP/BCP_lp_branching.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_branching.Tpo" "$(DEPDIR)/BCP_lp_branching.Plo"; else rm -f "$(DEPDIR)/BCP_lp_branching.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_branching.cpp' object='BCP_lp_branching.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_branching.lo `test -f 'LP/BCP_lp_branching.cpp' || echo '$(srcdir)/'`LP/BCP_lp_branching.cpp

BCP_lp_misc.lo: LP/BCP_lp_misc.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_misc.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_misc.Tpo" -c -o BCP_lp_misc.lo `test -f 'LP/BCP_lp_misc.cpp' || echo '$(srcdir)/'`LP/BCP_lp_misc.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_misc.Tpo" "$(DEPDIR)/BCP_lp_misc.Plo"; else rm -f "$(DEPDIR)/BCP_lp_misc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_misc.cpp' object='BCP_lp_misc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_misc.lo `test -f 'LP/BCP_lp_misc.cpp' || echo '$(srcdir)/'`LP/BCP_lp_misc.cpp

BCP_lp_main_loop.lo: LP/BCP_lp_main_loop.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_main_loop.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_main_loop.Tpo" -c -o BCP_lp_main_loop.lo `test -f 'LP/BCP_lp_main_loop.cpp' || echo '$(srcdir)/'`LP/BCP_lp_main_loop.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_main_loop.Tpo" "$(DEPDIR)/BCP_lp_main_loop.Plo"; else rm -f "$(DEPDIR)/BCP_lp_main_loop.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_main_loop.cpp' object='BCP_lp_main_loop.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_main_loop.lo `test -f 'LP/BCP_lp_main_loop.cpp' || echo '$(srcdir)/'`LP/BCP_lp_main_loop.cpp

BCP_lp_msgproc.lo: LP/BCP_lp_msgproc.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_msgproc.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_msgproc.Tpo" -c -o BCP_lp_msgproc.lo `test -f 'LP/BCP_lp_msgproc.cpp' || echo '$(srcdir)/'`LP/BCP_lp_msgproc.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_msgproc.Tpo" "$(DEPDIR)/BCP_lp_msgproc.Plo"; else rm -f "$(DEPDIR)/BCP_lp_msgproc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_msgproc.cpp' object='BCP_lp_msgproc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_msgproc.lo `test -f 'LP/BCP_lp_msgproc.cpp' || echo '$(srcdir)/'`LP/BCP_lp_msgproc.cpp

BCP_lp_user.lo: LP/BCP_lp_user.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_user.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_user.Tpo" -c -o BCP_lp_user.lo `test -f 'LP/BCP_lp_user.cpp' || echo '$(srcdir)/'`LP/BCP_lp_user.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_user.Tpo" "$(DEPDIR)/BCP_lp_user.Plo"; else rm -f "$(DEPDIR)/BCP_lp_user.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_user.cpp' object='BCP_lp_user.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_user.lo `test -f 'LP/BCP_lp_user.cpp' || echo '$(srcdir)/'`LP/BCP_lp_user.cpp

BCP_lp_generate_vars.lo: LP/BCP_lp_generate_vars.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_generate_vars.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_generate_vars.Tpo" -c -o BCP_lp_generate_vars.lo `test -f 'LP/BCP_lp_generate_vars.cpp' || echo '$(srcdir)/'`LP/BCP_lp_generate_vars.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_generate_vars.Tpo" "$(DEPDIR)/BCP_lp_generate_vars.Plo"; else rm -f "$(DEPDIR)/BCP_lp_generate_vars.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_generate_vars.cpp' object='BCP_lp_generate_vars.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_generate_vars.lo `test -f 'LP/BCP_lp_generate_vars.cpp' || echo '$(srcdir)/'`LP/BCP_lp_generate_vars.cpp

BCP_lp_msg_node_rec.lo: LP/BCP_lp_msg_node_rec.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_msg_node_rec.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_msg_node_rec.Tpo" -c -o BCP_lp_msg_node_rec.lo `test -f 'LP/BCP_lp_msg_node_rec.cpp' || echo '$(srcdir)/'`LP/BCP_lp_msg_node_rec.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_msg_node_rec.Tpo" "$(DEPDIR)/BCP_lp_msg_node_rec.Plo"; else rm -f "$(DEPDIR)/BCP_lp_msg_node_rec.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_msg_node_rec.cpp' object='BCP_lp_msg_node_rec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_msg_node_rec.lo `test -f 'LP/BCP_lp_msg_node_rec.cpp' || echo '$(srcdir)/'`LP/BCP_lp_msg_node_rec.cpp

BCP_lp_node.lo: LP/BCP_lp_node.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_node.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_node.Tpo" -c -o BCP_lp_node.lo `test -f 'LP/BCP_lp_node.cpp' || echo '$(srcdir)/'`LP/BCP_lp_node.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_node.Tpo" "$(DEPDIR)/BCP_lp_node.Plo"; else rm -f "$(DEPDIR)/BCP_lp_node.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_node.cpp' object='BCP_lp_node.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_node.lo `test -f 'LP/BCP_lp_node.cpp' || echo '$(srcdir)/'`LP/BCP_lp_node.cpp

BCP_lp_create_lp.lo: LP/BCP_lp_create_lp.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_create_lp.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_create_lp.Tpo" -c -o BCP_lp_create_lp.lo `test -f 'LP/BCP_lp_create_lp.cpp' || echo '$(srcdir)/'`LP/BCP_lp_create_lp.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_create_lp.Tpo" "$(DEPDIR)/BCP_lp_create_lp.Plo"; else rm -f "$(DEPDIR)/BCP_lp_create_lp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_create_lp.cpp' object='BCP_lp_create_lp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_create_lp.lo `test -f 'LP/BCP_lp_create_lp.cpp' || echo '$(srcdir)/'`LP/BCP_lp_create_lp.cpp

BCP_lp_msg_node_send.lo: LP/BCP_lp_msg_node_send.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_msg_node_send.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_msg_node_send.Tpo" -c -o BCP_lp_msg_node_send.lo `test -f 'LP/BCP_lp_msg_node_send.cpp' || echo '$(srcdir)/'`LP/BCP_lp_msg_node_send.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_msg_node_send.Tpo" "$(DEPDIR)/BCP_lp_msg_node_send.Plo"; else rm -f "$(DEPDIR)/BCP_lp_msg_node_send.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_msg_node_send.cpp' object='BCP_lp_msg_node_send.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_msg_node_send.lo `test -f 'LP/BCP_lp_msg_node_send.cpp' || echo '$(srcdir)/'`LP/BCP_lp_msg_node_send.cpp

BCP_lp_convert_OsiWarmStart.lo: LP/BCP_lp_convert_OsiWarmStart.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_convert_OsiWarmStart.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_convert_OsiWarmStart.Tpo" -c -o BCP_lp_convert_OsiWarmStart.lo `test -f 'LP/BCP_lp_convert_OsiWarmStart.cpp' || echo '$(srcdir)/'`LP/BCP_lp_convert_OsiWarmStart.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_convert_OsiWarmStart.Tpo" "$(DEPDIR)/BCP_lp_convert_OsiWarmStart.Plo"; else rm -f "$(DEPDIR)/BCP_lp_convert_OsiWarmStart.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_convert_OsiWarmStart.cpp' object='BCP_lp_convert_OsiWarmStart.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_convert_OsiWarmStart.lo `test -f 'LP/BCP_lp_convert_OsiWarmStart.cpp' || echo '$(srcdir)/'`LP/BCP_lp_convert_OsiWarmStart.cpp

BCP_lp_result.lo: LP/BCP_lp_result.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_result.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_result.Tpo" -c -o BCP_lp_result.lo `test -f 'LP/BCP_lp_result.cpp' || echo '$(srcdir)/'`LP/BCP_lp_result.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_result.Tpo" "$(DEPDIR)/BCP_lp_result.Plo"; else rm -f "$(DEPDIR)/BCP_lp_result.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_result.cpp' object='BCP_lp_result.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_result.lo `test -f 'LP/BCP_lp_result.cpp' || echo '$(srcdir)/'`LP/BCP_lp_result.cpp

BCP_lp_generate_cuts.lo: LP/BCP_lp_generate_cuts.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_generate_cuts.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_generate_cuts.Tpo" -c -o BCP_lp_generate_cuts.lo `test -f 'LP/BCP_lp_generate_cuts.cpp' || echo '$(srcdir)/'`LP/BCP_lp_generate_cuts.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_generate_cuts.Tpo" "$(DEPDIR)/BCP_lp_generate_cuts.Plo"; else rm -f "$(DEPDIR)/BCP_lp_generate_cuts.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_generate_cuts.cpp' object='BCP_lp_generate_cuts.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_generate_cuts.lo `test -f 'LP/BCP_lp_generate_cuts.cpp' || echo '$(srcdir)/'`LP/BCP_lp_generate_cuts.cpp

BCP_lp_colrow.lo: LP/BCP_lp_colrow.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_colrow.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_colrow.Tpo" -c -o BCP_lp_colrow.lo `test -f 'LP/BCP_lp_colrow.cpp' || echo '$(srcdir)/'`LP/BCP_lp_colrow.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_colrow.Tpo" "$(DEPDIR)/BCP_lp_colrow.Plo"; else rm -f "$(DEPDIR)/BCP_lp_colrow.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_colrow.cpp' object='BCP_lp_colrow.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_colrow.lo `test -f 'LP/BCP_lp_colrow.cpp' || echo '$(srcdir)/'`LP/BCP_lp_colrow.cpp

BCP_lp.lo: LP/BCP_lp.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp.lo -MD -MP -MF "$(DEPDIR)/BCP_lp.Tpo" -c -o BCP_lp.lo `test -f 'LP/BCP_lp.cpp' || echo '$(srcdir)/'`LP/BCP_lp.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp.Tpo" "$(DEPDIR)/BCP_lp.Plo"; else rm -f "$(DEPDIR)/BCP_lp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp.cpp' object='BCP_lp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp.lo `test -f 'LP/BCP_lp.cpp' || echo '$(srcdir)/'`LP/BCP_lp.cpp

BCP_lp_main.lo: LP/BCP_lp_main.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_main.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_main.Tpo" -c -o BCP_lp_main.lo `test -f 'LP/BCP_lp_main.cpp' || echo '$(srcdir)/'`LP/BCP_lp_main.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_main.Tpo" "$(DEPDIR)/BCP_lp_main.Plo"; else rm -f "$(DEPDIR)/BCP_lp_main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_main.cpp' object='BCP_lp_main.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_main.lo `test -f 'LP/BCP_lp_main.cpp' || echo '$(srcdir)/'`LP/BCP_lp_main.cpp

BCP_lp_pool.lo: LP/BCP_lp_pool.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_pool.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_pool.Tpo" -c -o BCP_lp_pool.lo `test -f 'LP/BCP_lp_pool.cpp' || echo '$(srcdir)/'`LP/BCP_lp_pool.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_pool.Tpo" "$(DEPDIR)/BCP_lp_pool.Plo"; else rm -f "$(DEPDIR)/BCP_lp_pool.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_pool.cpp' object='BCP_lp_pool.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_pool.lo `test -f 'LP/BCP_lp_pool.cpp' || echo '$(srcdir)/'`LP/BCP_lp_pool.cpp

BCP_lp_param.lo: LP/BCP_lp_param.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_lp_param.lo -MD -MP -MF "$(DEPDIR)/BCP_lp_param.Tpo" -c -o BCP_lp_param.lo `test -f 'LP/BCP_lp_param.cpp' || echo '$(srcdir)/'`LP/BCP_lp_param.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_lp_param.Tpo" "$(DEPDIR)/BCP_lp_param.Plo"; else rm -f "$(DEPDIR)/BCP_lp_param.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LP/BCP_lp_param.cpp' object='BCP_lp_param.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_lp_param.lo `test -f 'LP/BCP_lp_param.cpp' || echo '$(srcdir)/'`LP/BCP_lp_param.cpp

BCP_tm_trimming.lo: TM/BCP_tm_trimming.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_tm_trimming.lo -MD -MP -MF "$(DEPDIR)/BCP_tm_trimming.Tpo" -c -o BCP_tm_trimming.lo `test -f 'TM/BCP_tm_trimming.cpp' || echo '$(srcdir)/'`TM/BCP_tm_trimming.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_tm_trimming.Tpo" "$(DEPDIR)/BCP_tm_trimming.Plo"; else rm -f "$(DEPDIR)/BCP_tm_trimming.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TM/BCP_tm_trimming.cpp' object='BCP_tm_trimming.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_tm_trimming.lo `test -f 'TM/BCP_tm_trimming.cpp' || echo '$(srcdir)/'`TM/BCP_tm_trimming.cpp

BCP_tm_msg_node_send.lo: TM/BCP_tm_msg_node_send.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_tm_msg_node_send.lo -MD -MP -MF "$(DEPDIR)/BCP_tm_msg_node_send.Tpo" -c -o BCP_tm_msg_node_send.lo `test -f 'TM/BCP_tm_msg_node_send.cpp' || echo '$(srcdir)/'`TM/BCP_tm_msg_node_send.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_tm_msg_node_send.Tpo" "$(DEPDIR)/BCP_tm_msg_node_send.Plo"; else rm -f "$(DEPDIR)/BCP_tm_msg_node_send.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TM/BCP_tm_msg_node_send.cpp' object='BCP_tm_msg_node_send.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_tm_msg_node_send.lo `test -f 'TM/BCP_tm_msg_node_send.cpp' || echo '$(srcdir)/'`TM/BCP_tm_msg_node_send.cpp

BCP_tm_msg_node_rec.lo: TM/BCP_tm_msg_node_rec.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_tm_msg_node_rec.lo -MD -MP -MF "$(DEPDIR)/BCP_tm_msg_node_rec.Tpo" -c -o BCP_tm_msg_node_rec.lo `test -f 'TM/BCP_tm_msg_node_rec.cpp' || echo '$(srcdir)/'`TM/BCP_tm_msg_node_rec.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_tm_msg_node_rec.Tpo" "$(DEPDIR)/BCP_tm_msg_node_rec.Plo"; else rm -f "$(DEPDIR)/BCP_tm_msg_node_rec.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TM/BCP_tm_msg_node_rec.cpp' object='BCP_tm_msg_node_rec.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_tm_msg_node_rec.lo `test -f 'TM/BCP_tm_msg_node_rec.cpp' || echo '$(srcdir)/'`TM/BCP_tm_msg_node_rec.cpp

BCP_tm_param.lo: TM/BCP_tm_param.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_tm_param.lo -MD -MP -MF "$(DEPDIR)/BCP_tm_param.Tpo" -c -o BCP_tm_param.lo `test -f 'TM/BCP_tm_param.cpp' || echo '$(srcdir)/'`TM/BCP_tm_param.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_tm_param.Tpo" "$(DEPDIR)/BCP_tm_param.Plo"; else rm -f "$(DEPDIR)/BCP_tm_param.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TM/BCP_tm_param.cpp' object='BCP_tm_param.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_tm_param.lo `test -f 'TM/BCP_tm_param.cpp' || echo '$(srcdir)/'`TM/BCP_tm_param.cpp

BCP_tm_user.lo: TM/BCP_tm_user.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_tm_user.lo -MD -MP -MF "$(DEPDIR)/BCP_tm_user.Tpo" -c -o BCP_tm_user.lo `test -f 'TM/BCP_tm_user.cpp' || echo '$(srcdir)/'`TM/BCP_tm_user.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_tm_user.Tpo" "$(DEPDIR)/BCP_tm_user.Plo"; else rm -f "$(DEPDIR)/BCP_tm_user.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TM/BCP_tm_user.cpp' object='BCP_tm_user.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_tm_user.lo `test -f 'TM/BCP_tm_user.cpp' || echo '$(srcdir)/'`TM/BCP_tm_user.cpp

BCP_tm_commandline.lo: TM/BCP_tm_commandline.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_tm_commandline.lo -MD -MP -MF "$(DEPDIR)/BCP_tm_commandline.Tpo" -c -o BCP_tm_commandline.lo `test -f 'TM/BCP_tm_commandline.cpp' || echo '$(srcdir)/'`TM/BCP_tm_commandline.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_tm_commandline.Tpo" "$(DEPDIR)/BCP_tm_commandline.Plo"; else rm -f "$(DEPDIR)/BCP_tm_commandline.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TM/BCP_tm_commandline.cpp' object='BCP_tm_commandline.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_tm_commandline.lo `test -f 'TM/BCP_tm_commandline.cpp' || echo '$(srcdir)/'`TM/BCP_tm_commandline.cpp

BCP_tm_node.lo: TM/BCP_tm_node.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_tm_node.lo -MD -MP -MF "$(DEPDIR)/BCP_tm_node.Tpo" -c -o BCP_tm_node.lo `test -f 'TM/BCP_tm_node.cpp' || echo '$(srcdir)/'`TM/BCP_tm_node.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_tm_node.Tpo" "$(DEPDIR)/BCP_tm_node.Plo"; else rm -f "$(DEPDIR)/BCP_tm_node.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TM/BCP_tm_node.cpp' object='BCP_tm_node.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_tm_node.lo `test -f 'TM/BCP_tm_node.cpp' || echo '$(srcdir)/'`TM/BCP_tm_node.cpp

BCP_tm_msgproc.lo: TM/BCP_tm_msgproc.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_tm_msgproc.lo -MD -MP -MF "$(DEPDIR)/BCP_tm_msgproc.Tpo" -c -o BCP_tm_msgproc.lo `test -f 'TM/BCP_tm_msgproc.cpp' || echo '$(srcdir)/'`TM/BCP_tm_msgproc.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_tm_msgproc.Tpo" "$(DEPDIR)/BCP_tm_msgproc.Plo"; else rm -f "$(DEPDIR)/BCP_tm_msgproc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TM/BCP_tm_msgproc.cpp' object='BCP_tm_msgproc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_tm_msgproc.lo `test -f 'TM/BCP_tm_msgproc.cpp' || echo '$(srcdir)/'`TM/BCP_tm_msgproc.cpp

BCP_tm_functions.lo: TM/BCP_tm_functions.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_tm_functions.lo -MD -MP -MF "$(DEPDIR)/BCP_tm_functions.Tpo" -c -o BCP_tm_functions.lo `test -f 'TM/BCP_tm_functions.cpp' || echo '$(srcdir)/'`TM/BCP_tm_functions.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_tm_functions.Tpo" "$(DEPDIR)/BCP_tm_functions.Plo"; else rm -f "$(DEPDIR)/BCP_tm_functions.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TM/BCP_tm_functions.cpp' object='BCP_tm_functions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_tm_functions.lo `test -f 'TM/BCP_tm_functions.cpp' || echo '$(srcdir)/'`TM/BCP_tm_functions.cpp

BCP_tm_main.lo: TM/BCP_tm_main.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_tm_main.lo -MD -MP -MF "$(DEPDIR)/BCP_tm_main.Tpo" -c -o BCP_tm_main.lo `test -f 'TM/BCP_tm_main.cpp' || echo '$(srcdir)/'`TM/BCP_tm_main.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_tm_main.Tpo" "$(DEPDIR)/BCP_tm_main.Plo"; else rm -f "$(DEPDIR)/BCP_tm_main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TM/BCP_tm_main.cpp' object='BCP_tm_main.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_tm_main.lo `test -f 'TM/BCP_tm_main.cpp' || echo '$(srcdir)/'`TM/BCP_tm_main.cpp

BCP_tm_statistics.lo: TM/BCP_tm_statistics.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_tm_statistics.lo -MD -MP -MF "$(DEPDIR)/BCP_tm_statistics.Tpo" -c -o BCP_tm_statistics.lo `test -f 'TM/BCP_tm_statistics.cpp' || echo '$(srcdir)/'`TM/BCP_tm_statistics.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_tm_statistics.Tpo" "$(DEPDIR)/BCP_tm_statistics.Plo"; else rm -f "$(DEPDIR)/BCP_tm_statistics.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TM/BCP_tm_statistics.cpp' object='BCP_tm_statistics.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_tm_statistics.lo `test -f 'TM/BCP_tm_statistics.cpp' || echo '$(srcdir)/'`TM/BCP_tm_statistics.cpp

BCP_tm.lo: TM/BCP_tm.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_tm.lo -MD -MP -MF "$(DEPDIR)/BCP_tm.Tpo" -c -o BCP_tm.lo `test -f 'TM/BCP_tm.cpp' || echo '$(srcdir)/'`TM/BCP_tm.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_tm.Tpo" "$(DEPDIR)/BCP_tm.Plo"; else rm -f "$(DEPDIR)/BCP_tm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TM/BCP_tm.cpp' object='BCP_tm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_tm.lo `test -f 'TM/BCP_tm.cpp' || echo '$(srcdir)/'`TM/BCP_tm.cpp

BCP_vg_param.lo: VG/BCP_vg_param.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_vg_param.lo -MD -MP -MF "$(DEPDIR)/BCP_vg_param.Tpo" -c -o BCP_vg_param.lo `test -f 'VG/BCP_vg_param.cpp' || echo '$(srcdir)/'`VG/BCP_vg_param.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_vg_param.Tpo" "$(DEPDIR)/BCP_vg_param.Plo"; else rm -f "$(DEPDIR)/BCP_vg_param.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VG/BCP_vg_param.cpp' object='BCP_vg_param.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_vg_param.lo `test -f 'VG/BCP_vg_param.cpp' || echo '$(srcdir)/'`VG/BCP_vg_param.cpp

BCP_vg_user.lo: VG/BCP_vg_user.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_vg_user.lo -MD -MP -MF "$(DEPDIR)/BCP_vg_user.Tpo" -c -o BCP_vg_user.lo `test -f 'VG/BCP_vg_user.cpp' || echo '$(srcdir)/'`VG/BCP_vg_user.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_vg_user.Tpo" "$(DEPDIR)/BCP_vg_user.Plo"; else rm -f "$(DEPDIR)/BCP_vg_user.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VG/BCP_vg_user.cpp' object='BCP_vg_user.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_vg_user.lo `test -f 'VG/BCP_vg_user.cpp' || echo '$(srcdir)/'`VG/BCP_vg_user.cpp

BCP_vg_main.lo: VG/BCP_vg_main.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_vg_main.lo -MD -MP -MF "$(DEPDIR)/BCP_vg_main.Tpo" -c -o BCP_vg_main.lo `test -f 'VG/BCP_vg_main.cpp' || echo '$(srcdir)/'`VG/BCP_vg_main.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_vg_main.Tpo" "$(DEPDIR)/BCP_vg_main.Plo"; else rm -f "$(DEPDIR)/BCP_vg_main.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VG/BCP_vg_main.cpp' object='BCP_vg_main.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_vg_main.lo `test -f 'VG/BCP_vg_main.cpp' || echo '$(srcdir)/'`VG/BCP_vg_main.cpp

BCP_vg.lo: VG/BCP_vg.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_vg.lo -MD -MP -MF "$(DEPDIR)/BCP_vg.Tpo" -c -o BCP_vg.lo `test -f 'VG/BCP_vg.cpp' || echo '$(srcdir)/'`VG/BCP_vg.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_vg.Tpo" "$(DEPDIR)/BCP_vg.Plo"; else rm -f "$(DEPDIR)/BCP_vg.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VG/BCP_vg.cpp' object='BCP_vg.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_vg.lo `test -f 'VG/BCP_vg.cpp' || echo '$(srcdir)/'`VG/BCP_vg.cpp

BCP_solution.lo: Member/BCP_solution.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_solution.lo -MD -MP -MF "$(DEPDIR)/BCP_solution.Tpo" -c -o BCP_solution.lo `test -f 'Member/BCP_solution.cpp' || echo '$(srcdir)/'`Member/BCP_solution.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_solution.Tpo" "$(DEPDIR)/BCP_solution.Plo"; else rm -f "$(DEPDIR)/BCP_solution.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_solution.cpp' object='BCP_solution.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_solution.lo `test -f 'Member/BCP_solution.cpp' || echo '$(srcdir)/'`Member/BCP_solution.cpp

BCP_node_change.lo: Member/BCP_node_change.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_node_change.lo -MD -MP -MF "$(DEPDIR)/BCP_node_change.Tpo" -c -o BCP_node_change.lo `test -f 'Member/BCP_node_change.cpp' || echo '$(srcdir)/'`Member/BCP_node_change.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_node_change.Tpo" "$(DEPDIR)/BCP_node_change.Plo"; else rm -f "$(DEPDIR)/BCP_node_change.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_node_change.cpp' object='BCP_node_change.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_node_change.lo `test -f 'Member/BCP_node_change.cpp' || echo '$(srcdir)/'`Member/BCP_node_change.cpp

BCP_indexed_pricing.lo: Member/BCP_indexed_pricing.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_indexed_pricing.lo -MD -MP -MF "$(DEPDIR)/BCP_indexed_pricing.Tpo" -c -o BCP_indexed_pricing.lo `test -f 'Member/BCP_indexed_pricing.cpp' || echo '$(srcdir)/'`Member/BCP_indexed_pricing.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_indexed_pricing.Tpo" "$(DEPDIR)/BCP_indexed_pricing.Plo"; else rm -f "$(DEPDIR)/BCP_indexed_pricing.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_indexed_pricing.cpp' object='BCP_indexed_pricing.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_indexed_pricing.lo `test -f 'Member/BCP_indexed_pricing.cpp' || echo '$(srcdir)/'`Member/BCP_indexed_pricing.cpp

BCP_USER.lo: Member/BCP_USER.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_USER.lo -MD -MP -MF "$(DEPDIR)/BCP_USER.Tpo" -c -o BCP_USER.lo `test -f 'Member/BCP_USER.cpp' || echo '$(srcdir)/'`Member/BCP_USER.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_USER.Tpo" "$(DEPDIR)/BCP_USER.Plo"; else rm -f "$(DEPDIR)/BCP_USER.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_USER.cpp' object='BCP_USER.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_USER.lo `test -f 'Member/BCP_USER.cpp' || echo '$(srcdir)/'`Member/BCP_USER.cpp

BCP_warmstart_basis.lo: Member/BCP_warmstart_basis.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_warmstart_basis.lo -MD -MP -MF "$(DEPDIR)/BCP_warmstart_basis.Tpo" -c -o BCP_warmstart_basis.lo `test -f 'Member/BCP_warmstart_basis.cpp' || echo '$(srcdir)/'`Member/BCP_warmstart_basis.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_warmstart_basis.Tpo" "$(DEPDIR)/BCP_warmstart_basis.Plo"; else rm -f "$(DEPDIR)/BCP_warmstart_basis.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_warmstart_basis.cpp' object='BCP_warmstart_basis.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_warmstart_basis.lo `test -f 'Member/BCP_warmstart_basis.cpp' || echo '$(srcdir)/'`Member/BCP_warmstart_basis.cpp

BCP_branch.lo: Member/BCP_branch.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_branch.lo -MD -MP -MF "$(DEPDIR)/BCP_branch.Tpo" -c -o BCP_branch.lo `test -f 'Member/BCP_branch.cpp' || echo '$(srcdir)/'`Member/BCP_branch.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_branch.Tpo" "$(DEPDIR)/BCP_branch.Plo"; else rm -f "$(DEPDIR)/BCP_branch.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_branch.cpp' object='BCP_branch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_branch.lo `test -f 'Member/BCP_branch.cpp' || echo '$(srcdir)/'`Member/BCP_branch.cpp

BCP_vector_sanity.lo: Member/BCP_vector_sanity.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_vector_sanity.lo -MD -MP -MF "$(DEPDIR)/BCP_vector_sanity.Tpo" -c -o BCP_vector_sanity.lo `test -f 'Member/BCP_vector_sanity.cpp' || echo '$(srcdir)/'`Member/BCP_vector_sanity.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_vector_sanity.Tpo" "$(DEPDIR)/BCP_vector_sanity.Plo"; else rm -f "$(DEPDIR)/BCP_vector_sanity.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_vector_sanity.cpp' object='BCP_vector_sanity.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_vector_sanity.lo `test -f 'Member/BCP_vector_sanity.cpp' || echo '$(srcdir)/'`Member/BCP_vector_sanity.cpp

BCP_cut.lo: Member/BCP_cut.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_cut.lo -MD -MP -MF "$(DEPDIR)/BCP_cut.Tpo" -c -o BCP_cut.lo `test -f 'Member/BCP_cut.cpp' || echo '$(srcdir)/'`Member/BCP_cut.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_cut.Tpo" "$(DEPDIR)/BCP_cut.Plo"; else rm -f "$(DEPDIR)/BCP_cut.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_cut.cpp' object='BCP_cut.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_cut.lo `test -f 'Member/BCP_cut.cpp' || echo '$(srcdir)/'`Member/BCP_cut.cpp

BCP_obj_change.lo: Member/BCP_obj_change.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_obj_change.lo -MD -MP -MF "$(DEPDIR)/BCP_obj_change.Tpo" -c -o BCP_obj_change.lo `test -f 'Member/BCP_obj_change.cpp' || echo '$(srcdir)/'`Member/BCP_obj_change.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_obj_change.Tpo" "$(DEPDIR)/BCP_obj_change.Plo"; else rm -f "$(DEPDIR)/BCP_obj_change.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_obj_change.cpp' object='BCP_obj_change.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_obj_change.lo `test -f 'Member/BCP_obj_change.cpp' || echo '$(srcdir)/'`Member/BCP_obj_change.cpp

BCP_warmstart_dual.lo: Member/BCP_warmstart_dual.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_warmstart_dual.lo -MD -MP -MF "$(DEPDIR)/BCP_warmstart_dual.Tpo" -c -o BCP_warmstart_dual.lo `test -f 'Member/BCP_warmstart_dual.cpp' || echo '$(srcdir)/'`Member/BCP_warmstart_dual.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_warmstart_dual.Tpo" "$(DEPDIR)/BCP_warmstart_dual.Plo"; else rm -f "$(DEPDIR)/BCP_warmstart_dual.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_warmstart_dual.cpp' object='BCP_warmstart_dual.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_warmstart_dual.lo `test -f 'Member/BCP_warmstart_dual.cpp' || echo '$(srcdir)/'`Member/BCP_warmstart_dual.cpp

BCP_matrix.lo: Member/BCP_matrix.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_matrix.lo -MD -MP -MF "$(DEPDIR)/BCP_matrix.Tpo" -c -o BCP_matrix.lo `test -f 'Member/BCP_matrix.cpp' || echo '$(srcdir)/'`Member/BCP_matrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_matrix.Tpo" "$(DEPDIR)/BCP_matrix.Plo"; else rm -f "$(DEPDIR)/BCP_matrix.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_matrix.cpp' object='BCP_matrix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_matrix.lo `test -f 'Member/BCP_matrix.cpp' || echo '$(srcdir)/'`Member/BCP_matrix.cpp

BCP_problem_core.lo: Member/BCP_problem_core.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_problem_core.lo -MD -MP -MF "$(DEPDIR)/BCP_problem_core.Tpo" -c -o BCP_problem_core.lo `test -f 'Member/BCP_problem_core.cpp' || echo '$(srcdir)/'`Member/BCP_problem_core.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_problem_core.Tpo" "$(DEPDIR)/BCP_problem_core.Plo"; else rm -f "$(DEPDIR)/BCP_problem_core.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_problem_core.cpp' object='BCP_problem_core.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_problem_core.lo `test -f 'Member/BCP_problem_core.cpp' || echo '$(srcdir)/'`Member/BCP_problem_core.cpp

BCP_warmstart_pack.lo: Member/BCP_warmstart_pack.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_warmstart_pack.lo -MD -MP -MF "$(DEPDIR)/BCP_warmstart_pack.Tpo" -c -o BCP_warmstart_pack.lo `test -f 'Member/BCP_warmstart_pack.cpp' || echo '$(srcdir)/'`Member/BCP_warmstart_pack.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_warmstart_pack.Tpo" "$(DEPDIR)/BCP_warmstart_pack.Plo"; else rm -f "$(DEPDIR)/BCP_warmstart_pack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_warmstart_pack.cpp' object='BCP_warmstart_pack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_warmstart_pack.lo `test -f 'Member/BCP_warmstart_pack.cpp' || echo '$(srcdir)/'`Member/BCP_warmstart_pack.cpp

BCP_matrix_pack.lo: Member/BCP_matrix_pack.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_matrix_pack.lo -MD -MP -MF "$(DEPDIR)/BCP_matrix_pack.Tpo" -c -o BCP_matrix_pack.lo `test -f 'Member/BCP_matrix_pack.cpp' || echo '$(srcdir)/'`Member/BCP_matrix_pack.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_matrix_pack.Tpo" "$(DEPDIR)/BCP_matrix_pack.Plo"; else rm -f "$(DEPDIR)/BCP_matrix_pack.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_matrix_pack.cpp' object='BCP_matrix_pack.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_matrix_pack.lo `test -f 'Member/BCP_matrix_pack.cpp' || echo '$(srcdir)/'`Member/BCP_matrix_pack.cpp

BCP_var.lo: Member/BCP_var.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_var.lo -MD -MP -MF "$(DEPDIR)/BCP_var.Tpo" -c -o BCP_var.lo `test -f 'Member/BCP_var.cpp' || echo '$(srcdir)/'`Member/BCP_var.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_var.Tpo" "$(DEPDIR)/BCP_var.Plo"; else rm -f "$(DEPDIR)/BCP_var.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_var.cpp' object='BCP_var.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_var.lo `test -f 'Member/BCP_var.cpp' || echo '$(srcdir)/'`Member/BCP_var.cpp

BCP_vector_bool.lo: Member/BCP_vector_bool.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_vector_bool.lo -MD -MP -MF "$(DEPDIR)/BCP_vector_bool.Tpo" -c -o BCP_vector_bool.lo `test -f 'Member/BCP_vector_bool.cpp' || echo '$(srcdir)/'`Member/BCP_vector_bool.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_vector_bool.Tpo" "$(DEPDIR)/BCP_vector_bool.Plo"; else rm -f "$(DEPDIR)/BCP_vector_bool.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_vector_bool.cpp' object='BCP_vector_bool.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_vector_bool.lo `test -f 'Member/BCP_vector_bool.cpp' || echo '$(srcdir)/'`Member/BCP_vector_bool.cpp

BCP_vector_char.lo: Member/BCP_vector_char.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_vector_char.lo -MD -MP -MF "$(DEPDIR)/BCP_vector_char.Tpo" -c -o BCP_vector_char.lo `test -f 'Member/BCP_vector_char.cpp' || echo '$(srcdir)/'`Member/BCP_vector_char.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_vector_char.Tpo" "$(DEPDIR)/BCP_vector_char.Plo"; else rm -f "$(DEPDIR)/BCP_vector_char.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_vector_char.cpp' object='BCP_vector_char.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_vector_char.lo `test -f 'Member/BCP_vector_char.cpp' || echo '$(srcdir)/'`Member/BCP_vector_char.cpp

BCP_vector_double.lo: Member/BCP_vector_double.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_vector_double.lo -MD -MP -MF "$(DEPDIR)/BCP_vector_double.Tpo" -c -o BCP_vector_double.lo `test -f 'Member/BCP_vector_double.cpp' || echo '$(srcdir)/'`Member/BCP_vector_double.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_vector_double.Tpo" "$(DEPDIR)/BCP_vector_double.Plo"; else rm -f "$(DEPDIR)/BCP_vector_double.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_vector_double.cpp' object='BCP_vector_double.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_vector_double.lo `test -f 'Member/BCP_vector_double.cpp' || echo '$(srcdir)/'`Member/BCP_vector_double.cpp

BCP_vector_int.lo: Member/BCP_vector_int.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_vector_int.lo -MD -MP -MF "$(DEPDIR)/BCP_vector_int.Tpo" -c -o BCP_vector_int.lo `test -f 'Member/BCP_vector_int.cpp' || echo '$(srcdir)/'`Member/BCP_vector_int.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_vector_int.Tpo" "$(DEPDIR)/BCP_vector_int.Plo"; else rm -f "$(DEPDIR)/BCP_vector_int.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_vector_int.cpp' object='BCP_vector_int.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_vector_int.lo `test -f 'Member/BCP_vector_int.cpp' || echo '$(srcdir)/'`Member/BCP_vector_int.cpp

BCP_vector_short.lo: Member/BCP_vector_short.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_vector_short.lo -MD -MP -MF "$(DEPDIR)/BCP_vector_short.Tpo" -c -o BCP_vector_short.lo `test -f 'Member/BCP_vector_short.cpp' || echo '$(srcdir)/'`Member/BCP_vector_short.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_vector_short.Tpo" "$(DEPDIR)/BCP_vector_short.Plo"; else rm -f "$(DEPDIR)/BCP_vector_short.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_vector_short.cpp' object='BCP_vector_short.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_vector_short.lo `test -f 'Member/BCP_vector_short.cpp' || echo '$(srcdir)/'`Member/BCP_vector_short.cpp

BCP_message_single.lo: Member/BCP_message_single.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_message_single.lo -MD -MP -MF "$(DEPDIR)/BCP_message_single.Tpo" -c -o BCP_message_single.lo `test -f 'Member/BCP_message_single.cpp' || echo '$(srcdir)/'`Member/BCP_message_single.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_message_single.Tpo" "$(DEPDIR)/BCP_message_single.Plo"; else rm -f "$(DEPDIR)/BCP_message_single.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_message_single.cpp' object='BCP_message_single.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_message_single.lo `test -f 'Member/BCP_message_single.cpp' || echo '$(srcdir)/'`Member/BCP_message_single.cpp

BCP_message_mpi.lo: Member/BCP_message_mpi.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_message_mpi.lo -MD -MP -MF "$(DEPDIR)/BCP_message_mpi.Tpo" -c -o BCP_message_mpi.lo `test -f 'Member/BCP_message_mpi.cpp' || echo '$(srcdir)/'`Member/BCP_message_mpi.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_message_mpi.Tpo" "$(DEPDIR)/BCP_message_mpi.Plo"; else rm -f "$(DEPDIR)/BCP_message_mpi.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_message_mpi.cpp' object='BCP_message_mpi.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_message_mpi.lo `test -f 'Member/BCP_message_mpi.cpp' || echo '$(srcdir)/'`Member/BCP_message_mpi.cpp

BCP_message_pvm.lo: Member/BCP_message_pvm.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BCP_message_pvm.lo -MD -MP -MF "$(DEPDIR)/BCP_message_pvm.Tpo" -c -o BCP_message_pvm.lo `test -f 'Member/BCP_message_pvm.cpp' || echo '$(srcdir)/'`Member/BCP_message_pvm.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BCP_message_pvm.Tpo" "$(DEPDIR)/BCP_message_pvm.Plo"; else rm -f "$(DEPDIR)/BCP_message_pvm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Member/BCP_message_pvm.cpp' object='BCP_message_pvm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BCP_message_pvm.lo `test -f 'Member/BCP_message_pvm.cpp' || echo '$(srcdir)/'`Member/BCP_message_pvm.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../inc $(distdir)/include
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-exec-am: install-exec-local install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-local

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-exec-local install-includeHEADERS \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-local


install-exec-local:
	echo "#ifndef HAVE_CONFIG_H" >bla
	echo "#define HAVE_CONFIG_H" >>bla
	echo "#endif" >> bla
	cat $(srcdir)/include/$(ConfigHeader) >> bla
	$(install_sh_DATA) bla $(DESTDIR)$(includedir)/$(ConfigHeader)
	rm -f bla

uninstall-local:
	rm -f $(DESTDIR)$(includedir)/$(ConfigHeader)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
